{"version":3,"sources":["../../src/pages/modal/modal.module.ts","../../src/pages/modal/modal.ts"],"names":[],"mappings":"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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { ModalPage } from './modal';\n\n@NgModule({\n  declarations: [\n    ModalPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(ModalPage),\n  ],\n  exports: [\n    ModalPage\n  ]\n})\nexport class ModalPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/modal/modal.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavParams, ViewController, AlertController, MenuController, ToastController, NavController  } from 'ionic-angular';\nimport { Dashboard } from '../dashboard/dashboard';\n\nimport firebase from 'firebase';\n/**\n * Generated class for the ModalPage page.\n *\n * See http://ionicframework.com/docs/components/#navigation for more info\n * on Ionic pages and navigation.\n */\n@IonicPage()\n@Component({\n  selector: 'page-modal',\n  templateUrl: 'modal.html',\n})\nexport class ModalPage {\n  public recaptchaVerifier:firebase.auth.RecaptchaVerifier;\n  constructor(public navParams: NavParams, \n    public view: ViewController, \n    public alertCtrl: AlertController, \n    public menuCtrl: MenuController, \n    public toastCtrl: ToastController,\n    public navCtrl: NavController) {\n  }\n\n  ionViewDidLoad() {\n    this.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha-container');\n    console.log('ionViewDidLoad ModalPage');\n  }\n\n  closeModal(){\n    this.view.dismiss();\n  }\n\n  signIn(phoneNumber: number){\n    var self = this;\n    const appVerifier = this.recaptchaVerifier;\n    const phoneNumberString = \"+6\" + phoneNumber;\n    firebase.auth().signInWithPhoneNumber(phoneNumberString, appVerifier)\n      .then( confirmationResult => {\n        // SMS sent. Prompt user to type the code from the message, then sign the\n        // user in with confirmationResult.confirm(code).\n        let prompt = this.alertCtrl.create({\n        title: 'Enter the Confirmation code',\n        inputs: [{ name: 'confirmationCode', placeholder: 'Confirmation Code' }],\n        buttons: [\n          { text: 'Cancel',\n            handler: data => { console.log('Cancel clicked'); \n            prompt.dismiss(); \n            return false;\n            }\n          },\n          { text: 'Send',\n            handler: data => {\n              confirmationResult.confirm(data.confirmationCode)\n                .then(function (result) {\n                  // User signed in successfully.\n                  self.menuCtrl.swipeEnable(true);\n                  prompt.dismiss();\n                  self.closeModal();\n                  return false;\n                  // ...\n                }).catch(function (error) {\n                  // User couldn't sign in (bad verification code?)\n                  // ...\n                  console.log(error);\n                });\n            }\n          }\n        ]\n      });\n      prompt.present();\n    })\n    .catch(function (error) {\n      console.error(\"SMS not sent\", error);\n    });\n    \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/modal/modal.ts"],"sourceRoot":""}